/*
 * Main.eq
 * Generated by Eqela Studio 2.0b7.4
 */

public class Main : SEScene
{
	SESprite fg;
	SESprite bg;
	bool move_right=true;
	bool move_left=false;
	bool move_down=true;
	bool move_up=false;
	int speed=50;
	double rotation= 0;
	SESprite text;
	int bounce=0;
	String my_text;
	SESprite pic;


	public void initialize(SEResourceCache rsc) {
		base.initialize(rsc);
		my_text="Bounce = %d".printf().add(Primitive.for_integer(bounce++)).to_string();
		bg = add_sprite_for_color(Color.instance("blue"),get_scene_width(), get_scene_height());
		bg.move(0,0);
	//	fg = add_sprite_for_color(Color.instance("black"),get_scene_width()*0.1, get_scene_height()*0.1);
	//	fg.move(100,100);
		rsc.prepare_image("temp","tuesdaaaaaa", get_scene_width()*0.1, get_scene_height()*0.1);
		pic = add_sprite_for_image(SEImage.for_resource("temp"));
		pic.move(100,100);
		rsc.prepare_font("myFont", "comic bold color=white",40);
		text =  add_sprite_for_text(my_text, "myFont");
		text.move(100,get_scene_height()-text.get_height()-100);
	}

	public void update(TimeVal now, double delta) {
		base.update(now, delta);
		if(move_down) {
			pic.move(pic.get_x(),pic.get_y()+delta*speed);
			rotation+=MathConstant.M_PI/14;
			pic.set_rotation(rotation);
			if(pic.get_y()+pic.get_height()>get_scene_height()) {
				move_down=false;
				move_up=true;
				speed=50;
				text.set_text("Bounce = %d".printf().add(Primitive.for_integer(bounce++)).to_string());
				}	
				speed+=50;
			}
		if(move_up) 
		{
			pic.move(pic.get_x(),pic.get_y()-delta*speed);
			rotation+=MathConstant.M_PI/14;
			pic.set_rotation(rotation);
			if(pic.get_y()<0) {
				move_down=true;
				move_up=false;
				speed=50;
				text.set_text("Bounce = %d".printf().add(Primitive.for_integer(bounce++)).to_string());
			}
				speed+=50;
		}
		
		
		 if(move_right) {
			pic.move(pic.get_x()+delta*speed,pic.get_y());
			rotation+=MathConstant.M_PI/14;
			pic.set_rotation(rotation);
			if(pic.get_x()+pic.get_width()>get_scene_width()) {
				move_right=false;
				move_left=true;
				speed=50;
				text.set_text("Bounce = %d".printf().add(Primitive.for_integer(bounce++)).to_string());
				}
				speed+=50;	
			}
		if(move_left) 
		{
			pic.move(pic.get_x()-delta*speed,pic.get_y());
			rotation+=MathConstant.M_PI/14;
			pic.set_rotation(rotation);
			if(pic.get_x()<0) {
				move_right=true;
				move_left=false;
				speed=50;
				text.set_text("Bounce = %d".printf().add(Primitive.for_integer(bounce++)).to_string());
			}
			speed+=50;		
		}		
	}


	public void set_rotation(double angle) {
		rotation = angle;
		
	}

	public double get_rotation() {
		return(rotation);
	}

	public void cleanup() {
		base.cleanup();
		SESprite.remove(fg);
		SESprite.remove(bg);
		SESprite.remove(text);
	}
	
}
